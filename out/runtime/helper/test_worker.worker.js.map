{"version":3,"sources":["../../../src/runtime/helper/test_worker.worker.ts"],"names":["TestLoader","Logger","log","loader","self","onmessage","ev","query","debug","data","files","Array","from","loadTests","length","Error","f","rec","record","id","spec","cases","g","iterate","c","result","run","postMessage"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,2BAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAGuB;AAEvB,MAAMC,GAAG,GAAG,IAAID,MAAJ,EAAZ;AACA,MAAME,MAAM,GAAG,IAAIH,UAAJ,EAAf;;AAEAI,IAAI,CAACC,SAAL,GAAiB,MAAOC,EAAP,IAA4B;AAC3C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,EAAE,CAACG,IAA5B;AAEA,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,EAAW,MAAMT,MAAM,CAACU,SAAP,CAAiB,CAACN,KAAD,CAAjB,CAAjB,EAAd;AACA,MAAIG,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AAExB,QAAMC,CAAC,GAAGN,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,CAACO,GAAD,IAAQf,GAAG,CAACgB,MAAJ,CAAWF,CAAC,CAACG,EAAb,CAAd;AACA,MAAI,EAAE,OAAOH,CAAC,CAACI,IAAX,CAAJ,EAAsB,MAAM,IAAIL,KAAJ,CAAU,iCAAV,CAAN;AAEtB,QAAMM,KAAK,GAAGV,KAAK,CAACC,IAAN,CAAWI,CAAC,CAACI,IAAF,CAAOE,CAAP,CAASC,OAAT,CAAiBN,GAAjB,CAAX,CAAd;AACA,MAAII,KAAK,CAACP,MAAN,KAAiB,CAArB,EAAwB,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACxB,QAAMS,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAf;AAEA,QAAMI,MAAM,GAAG,MAAMD,CAAC,CAACE,GAAF,CAAMlB,KAAN,CAArB;AAEAJ,EAAAA,IAAI,CAACuB,WAAL,CAAiB;AAAEpB,IAAAA,KAAF;AAASkB,IAAAA;AAAT,GAAjB;AACD,CAjBD","sourcesContent":["import { TestLoader } from '../../framework/loader.js';\nimport { Logger } from '../../framework/logger.js';\n\n// tslint:disable-next-line: no-any\ndeclare var self: any; // should be DedicatedWorkerGlobalScope\n\nconst log = new Logger();\nconst loader = new TestLoader();\n\nself.onmessage = async (ev: MessageEvent) => {\n  const { query, debug } = ev.data;\n\n  const files = Array.from(await loader.loadTests([query]));\n  if (files.length !== 1) throw new Error('worker query resulted in != 1 files');\n\n  const f = files[0];\n  const [rec] = log.record(f.id);\n  if (!('g' in f.spec)) throw new Error('worker query resulted in README');\n\n  const cases = Array.from(f.spec.g.iterate(rec));\n  if (cases.length !== 1) throw new Error('worker query resulted in != 1 cases');\n  const c = cases[0];\n\n  const result = await c.run(debug);\n\n  self.postMessage({ query, result });\n};\n"],"file":"test_worker.worker.js"}