{"version":3,"sources":["../../../src/runtime/helper/test_worker.ts"],"names":["TestWorker","constructor","Map","selfPath","import","meta","url","selfPathDir","substring","lastIndexOf","workerPath","worker","Worker","type","onmessage","ev","query","result","data","resolvers","get","run","debug","postMessage","Promise","resolve","set"],"mappings":";;;;;;AAEA,OAAO,MAAMA,UAAN,CAAiB;AAItBC,EAAAA,WAAW,GAAG;AAAA;;AAAA,uCAFM,IAAIC,GAAJ,EAEN;;AACZ,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYC,GAA7B;AACA,UAAMC,WAAW,GAAGJ,QAAQ,CAACK,SAAT,CAAmB,CAAnB,EAAsBL,QAAQ,CAACM,WAAT,CAAqB,GAArB,CAAtB,CAApB;AACA,UAAMC,UAAU,GAAGH,WAAW,GAAG,wBAAjC;AACA,SAAKI,MAAL,GAAc,IAAIC,MAAJ,CAAWF,UAAX,EAAuB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAvB,CAAd;;AACA,SAAKF,MAAL,CAAYG,SAAZ,GAAwBC,EAAE,IAAI;AAC5B,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBF,EAAE,CAACG,IAA7B;AACA,WAAKC,SAAL,CAAeC,GAAf,CAAmBJ,KAAnB,EAA2BC,MAA3B,EAF4B,CAI5B;AACA;AACD,KAND;AAOD;;AAEDI,EAAAA,GAAG,CAACL,KAAD,EAAgBM,KAAc,GAAG,KAAjC,EAAqE;AACtE,SAAKX,MAAL,CAAYY,WAAZ,CAAwB;AAAEP,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAxB;AACA,WAAO,IAAIE,OAAJ,CAAYC,OAAO,IAAI;AAC5B,WAAKN,SAAL,CAAeO,GAAf,CAAmBV,KAAnB,EAA0BS,OAA1B;AACD,KAFM,CAAP;AAGD;;AAvBqB","sourcesContent":["import { LiveTestCaseResult } from '../../framework/logger';\n\nexport class TestWorker {\n  private worker: Worker;\n  private resolvers = new Map<string, (result: LiveTestCaseResult) => void>();\n\n  constructor() {\n    const selfPath = import.meta.url;\n    const selfPathDir = selfPath.substring(0, selfPath.lastIndexOf('/'));\n    const workerPath = selfPathDir + '/test_worker.worker.js';\n    this.worker = new Worker(workerPath, { type: 'module' });\n    this.worker.onmessage = ev => {\n      const { query, result } = ev.data;\n      this.resolvers.get(query)!(result);\n\n      // TODO(kainino0x): update the Logger with this result (or don't have a logger and update the\n      // entire results JSON somehow at some point).\n    };\n  }\n\n  run(query: string, debug: boolean = false): Promise<LiveTestCaseResult> {\n    this.worker.postMessage({ query, debug });\n    return new Promise(resolve => {\n      this.resolvers.set(query, resolve);\n    });\n  }\n}\n"],"file":"test_worker.js"}