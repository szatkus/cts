{"version":3,"sources":["../../src/framework/collect_garbage.ts"],"names":["attemptGarbageCollection","w","self","GCController","collect","opera","QueryInterface","Components","interfaces","nsIInterfaceRequestor","getInterface","nsIDOMWindowUtils","garbageCollect","e","gc","CollectGarbage","i","gcRec","n","temp"],"mappings":";;;;AAGA,OAAO,SAASA,wBAAT,GAA0C;AAE/C,QAAMC,CAAM,GAAGC,IAAf;;AACA,MAAID,CAAC,CAACE,YAAN,EAAoB;AAClBF,IAAAA,CAAC,CAACE,YAAF,CAAeC,OAAf;AACA;AACD;;AAED,MAAIH,CAAC,CAACI,KAAF,IAAWJ,CAAC,CAACI,KAAF,CAAQD,OAAvB,EAAgC;AAC9BH,IAAAA,CAAC,CAACI,KAAF,CAAQD,OAAR;AACA;AACD;;AAED,MAAI;AACFH,IAAAA,CAAC,CAACK,cAAF,CAAiBC,UAAU,CAACC,UAAX,CAAsBC,qBAAvC,EACGC,YADH,CACgBH,UAAU,CAACC,UAAX,CAAsBG,iBADtC,EAEGC,cAFH;AAGA;AACD,GALD,CAKE,OAAOC,CAAP,EAAU,CAAE;;AAEd,MAAIZ,CAAC,CAACa,EAAN,EAAU;AACRb,IAAAA,CAAC,CAACa,EAAF;AACA;AACD;;AAED,MAAIb,CAAC,CAACc,cAAN,EAAsB;AACpBd,IAAAA,CAAC,CAACc,cAAF;AACA;AACD;;AAED,MAAIC,CAAJ;;AACA,WAASC,KAAT,CAAeC,CAAf,EAAgC;AAC9B,QAAIA,CAAC,GAAG,CAAR,EAAW;AAEX,QAAIC,IAAS,GAAG;AAAEH,MAAAA,CAAC,EAAE,OAAOA,CAAP,GAAWA,CAAC,GAAG;AAApB,KAAhB;AACAG,IAAAA,IAAI,GAAGA,IAAI,GAAG,KAAd;AACAF,IAAAA,KAAK,CAACC,CAAC,GAAG,CAAL,CAAL;AACD;;AACD,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,IAAhB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBC,IAAAA,KAAK,CAAC,EAAD,CAAL;AACD;AACF","sourcesContent":["// tslint:disable-next-line: no-any\ndeclare const Components: any;\n\nexport function attemptGarbageCollection(): void {\n  // tslint:disable-next-line: no-any\n  const w: any = self;\n  if (w.GCController) {\n    w.GCController.collect();\n    return;\n  }\n\n  if (w.opera && w.opera.collect) {\n    w.opera.collect();\n    return;\n  }\n\n  try {\n    w.QueryInterface(Components.interfaces.nsIInterfaceRequestor)\n      .getInterface(Components.interfaces.nsIDOMWindowUtils)\n      .garbageCollect();\n    return;\n  } catch (e) {}\n\n  if (w.gc) {\n    w.gc();\n    return;\n  }\n\n  if (w.CollectGarbage) {\n    w.CollectGarbage();\n    return;\n  }\n\n  let i: number;\n  function gcRec(n: number): void {\n    if (n < 1) return;\n    // tslint:disable-next-line: no-any\n    let temp: any = { i: 'ab' + i + i / 100000 };\n    temp = temp + 'foo';\n    gcRec(n - 1);\n  }\n  for (i = 0; i < 1000; i++) {\n    gcRec(10);\n  }\n}\n"],"file":"collect_garbage.js"}