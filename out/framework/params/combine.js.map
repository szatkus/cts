{"version":3,"sources":["../../../src/framework/params/combine.ts"],"names":["pcombine","params","PCombine","merge","a","b","key","Object","keys","hasOwnProperty","Error","cartesian","iters","length","as","rest","Symbol","iterator","constructor"],"mappings":";;;;;;;;AAEA,OAAO,SAASA,QAAT,CAAkB,GAAGC,MAArB,EAAqE;AAC1E,SAAO,IAAIC,QAAJ,CAAaD,MAAb,CAAP;AACD;;AAED,SAASE,KAAT,CAAeC,CAAf,EAA6BC,CAA7B,EAAsD;AACpD,OAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAlB,EAAkC;AAChC,QAAIC,CAAC,CAACI,cAAF,CAAiBH,GAAjB,CAAJ,EAA2B;AACzB,YAAM,IAAII,KAAJ,CAAU,oBAAoBJ,GAA9B,CAAN;AACD;AACF;;AACD,SAAO,EAAE,GAAGF,CAAL;AAAQ,OAAGC;AAAX,GAAP;AACD;;AAED,UAAUM,SAAV,CAAoBC,KAApB,EAAmE;AACjE,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AACD,MAAID,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOD,KAAK,CAAC,CAAD,CAAZ;AACA;AACD;;AACD,QAAM,CAACE,EAAD,EAAK,GAAGC,IAAR,IAAgBH,KAAtB;;AACA,OAAK,MAAMR,CAAX,IAAgBU,EAAhB,EAAoB;AAClB,SAAK,MAAMT,CAAX,IAAgBM,SAAS,CAACI,IAAD,CAAzB,EAAiC;AAC/B,YAAMZ,KAAK,CAACC,CAAD,EAAIC,CAAJ,CAAX;AACD;AACF;AACF;;mBASEW,MAAM,CAACC,Q;;AAPV,MAAMf,QAAN,CAA4C;AAG1CgB,EAAAA,WAAW,CAACjB,MAAD,EAA8B;AAAA;;AACvC,SAAKA,MAAL,GAAcA,MAAd;AACD;;AAED,uBAAuC;AACrC,WAAOU,SAAS,CAAC,KAAKV,MAAN,CAAhB;AACD;;AATyC","sourcesContent":["import { ParamSpec, ParamSpecIterable, ParamSpecIterator } from './index.js';\n\nexport function pcombine(...params: ParamSpecIterable[]): ParamSpecIterable {\n  return new PCombine(params);\n}\n\nfunction merge(a: ParamSpec, b: ParamSpec): ParamSpec {\n  for (const key of Object.keys(a)) {\n    if (b.hasOwnProperty(key)) {\n      throw new Error('Duplicate key: ' + key);\n    }\n  }\n  return { ...a, ...b };\n}\n\nfunction* cartesian(iters: ParamSpecIterable[]): ParamSpecIterator {\n  if (iters.length === 0) {\n    return;\n  }\n  if (iters.length === 1) {\n    yield* iters[0];\n    return;\n  }\n  const [as, ...rest] = iters;\n  for (const a of as) {\n    for (const b of cartesian(rest)) {\n      yield merge(a, b);\n    }\n  }\n}\n\nclass PCombine implements ParamSpecIterable {\n  private params: ParamSpecIterable[];\n\n  constructor(params: ParamSpecIterable[]) {\n    this.params = params;\n  }\n\n  [Symbol.iterator](): ParamSpecIterator {\n    return cartesian(this.params);\n  }\n}\n"],"file":"combine.js"}