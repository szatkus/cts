{"version":3,"sources":["../../../../src/suites/cts/validation/setViewport.spec.ts"],"names":["description","TestGroup","ValidationTest","TEXTURE_WIDTH","TEXTURE_HEIGHT","F","beginRenderPass","commandEncoder","attachmentTexture","device","createTexture","format","size","width","height","depth","usage","GPUTextureUsage","OUTPUT_ATTACHMENT","colorAttachments","attachment","createView","loadValue","r","g","b","a","test","t","x","y","minDepth","maxDepth","_success","params","createCommandEncoder","renderPass","setViewport","endPass","expectValidationError","finish"],"mappings":";;;;AAAA,OAAO,MAAMA,WAAW,GAAI;;CAArB;AAIP,SAASC,SAAT,QAA0B,6BAA1B;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,MAAMC,aAAqB,GAAG,EAA9B;AACA,MAAMC,cAAsB,GAAG,EAA/B,C,CAEA;;AACA,MAAMC,CAAN,SAAgBH,cAAhB,CAA+B;AAC7BI,EAAAA,eAAe,CAACC,cAAD,EAA0D;AACvE,UAAMC,iBAAiB,GAAG,KAAKC,MAAL,CAAYC,aAAZ,CAA0B;AAClDC,MAAAA,MAAM,EAAE,YAD0C;AAElDC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEV,aAAT;AAAwBW,QAAAA,MAAM,EAAEV,cAAhC;AAAgDW,QAAAA,KAAK,EAAE;AAAvD,OAF4C;AAGlDC,MAAAA,KAAK,EAAEC,eAAe,CAACC;AAH2B,KAA1B,CAA1B;AAMA,WAAOX,cAAc,CAACD,eAAf,CAA+B;AACpCa,MAAAA,gBAAgB,EAAE,CAChB;AACEC,QAAAA,UAAU,EAAEZ,iBAAiB,CAACa,UAAlB,EADd;AAEEC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,CAAC,EAAE,GAAL;AAAUC,UAAAA,CAAC,EAAE,GAAb;AAAkBC,UAAAA,CAAC,EAAE,GAArB;AAA0BC,UAAAA,CAAC,EAAE;AAA7B;AAFb,OADgB;AADkB,KAA/B,CAAP;AAQD;;AAhB4B;;AAmB/B,OAAO,MAAMF,CAAC,GAAG,IAAIvB,SAAJ,CAAcI,CAAd,CAAV;AAEPmB,CAAC,CAACG,IAAF,CAAO,oBAAP,EAA6B,MAAMC,CAAN,IAAW;AACtC,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQjB,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBiB,IAAAA,QAAvB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,MAAwDL,CAAC,CAACM,MAAhE;AAEA,QAAM3B,cAAc,GAAGqB,CAAC,CAACnB,MAAF,CAAS0B,oBAAT,EAAvB;AACA,QAAMC,UAAU,GAAGR,CAAC,CAACtB,eAAF,CAAkBC,cAAlB,CAAnB;AACA6B,EAAAA,UAAU,CAACC,WAAX,CAAuBR,CAAvB,EAA0BC,CAA1B,EAA6BjB,KAA7B,EAAoCC,MAApC,EAA4CiB,QAA5C,EAAsDC,QAAtD;AACAI,EAAAA,UAAU,CAACE,OAAX;AAEAV,EAAAA,CAAC,CAACW,qBAAF,CAAwB,MAAM;AAC5BhC,IAAAA,cAAc,CAACiC,MAAf;AACD,GAFD,EAEG,CAACP,QAFJ;AAGD,CAXD,EAWGC,MAXH,CAWU,CACR;AAAEL,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,CAA1D;AAA6DC,EAAAA,QAAQ,EAAE;AAAvE,CADQ,EACuE;AAC/E;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,CAA1D;AAA6DC,EAAAA,QAAQ,EAAE;AAAvE,CAFQ,EAEwE;AAChF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,CAA1D;AAA6DC,EAAAA,QAAQ,EAAE;AAAvE,CAHQ,EAGwE;AAChF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,CAA1D;AAA6DC,EAAAA,QAAQ,EAAE;AAAvE,CAJQ,EAIwE;AAChF;AAAEJ,EAAAA,CAAC,EAAE,CAAC,CAAN;AAASC,EAAAA,CAAC,EAAE,CAAZ;AAAejB,EAAAA,KAAK,EAAE,CAAtB;AAAyBC,EAAAA,MAAM,EAAE,CAAjC;AAAoCiB,EAAAA,QAAQ,EAAE,CAA9C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CALQ,EAKwE;AAChF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAC,CAAZ;AAAejB,EAAAA,KAAK,EAAE,CAAtB;AAAyBC,EAAAA,MAAM,EAAE,CAAjC;AAAoCiB,EAAAA,QAAQ,EAAE,CAA9C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CANQ,EAMwE;AAChF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAAC,CAAtB;AAAyBC,EAAAA,MAAM,EAAE,CAAjC;AAAoCiB,EAAAA,QAAQ,EAAE,CAA9C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CAPQ,EAOyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAC,CAAjC;AAAoCiB,EAAAA,QAAQ,EAAE,CAA9C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CARQ,EAQyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAAC,CAA9C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CATQ,EASyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,CAAC,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CAVQ,EAUyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,EAA7C;AAAiDC,EAAAA,QAAQ,EAAE,CAA3D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CAXQ,EAWyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,CAA7C;AAAgDC,EAAAA,QAAQ,EAAE,EAA1D;AAA8DC,EAAAA,QAAQ,EAAE;AAAxE,CAZQ,EAYyE;AACjF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,GAA7C;AAAkDC,EAAAA,QAAQ,EAAE,GAA5D;AAAiEC,EAAAA,QAAQ,EAAE;AAA3E,CAbQ,EAa2E;AACnF;AAAEJ,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcjB,EAAAA,KAAK,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE,CAAhC;AAAmCiB,EAAAA,QAAQ,EAAE,GAA7C;AAAkDC,EAAAA,QAAQ,EAAE,GAA5D;AAAiEC,EAAAA,QAAQ,EAAE;AAA3E,CAdQ,EAc2E;AACnF;AACEJ,EAAAA,CAAC,EAAE,CADL;AAEEC,EAAAA,CAAC,EAAE,CAFL;AAGEjB,EAAAA,KAAK,EAAEV,aAAa,GAAG,CAHzB;AAIEW,EAAAA,MAAM,EAAEV,cAAc,GAAG,CAJ3B;AAKE2B,EAAAA,QAAQ,EAAE,CALZ;AAMEC,EAAAA,QAAQ,EAAE,CANZ;AAOEC,EAAAA,QAAQ,EAAE;AAPZ,CAfQ,CAuBL;AAvBK,CAXV","sourcesContent":["export const description = `\nsetViewport validation tests.\n`;\n\nimport { TestGroup } from '../../../framework/index.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nconst TEXTURE_WIDTH: number = 16;\nconst TEXTURE_HEIGHT: number = 16;\n\n// TODO: Move this fixture class to a common file.\nclass F extends ValidationTest {\n  beginRenderPass(commandEncoder: GPUCommandEncoder): GPURenderPassEncoder {\n    const attachmentTexture = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: { width: TEXTURE_WIDTH, height: TEXTURE_HEIGHT, depth: 1 },\n      usage: GPUTextureUsage.OUTPUT_ATTACHMENT,\n    });\n\n    return commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          attachment: attachmentTexture.createView(),\n          loadValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n        },\n      ],\n    });\n  }\n}\n\nexport const g = new TestGroup(F);\n\ng.test('use of setViewport', async t => {\n  const { x, y, width, height, minDepth, maxDepth, _success } = t.params;\n\n  const commandEncoder = t.device.createCommandEncoder();\n  const renderPass = t.beginRenderPass(commandEncoder);\n  renderPass.setViewport(x, y, width, height, minDepth, maxDepth);\n  renderPass.endPass();\n\n  t.expectValidationError(() => {\n    commandEncoder.finish();\n  }, !_success);\n}).params([\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 0, maxDepth: 1, _success: true }, // Basic use\n  { x: 0, y: 0, width: 0, height: 1, minDepth: 0, maxDepth: 1, _success: false }, // Width of zero is not allowed\n  { x: 0, y: 0, width: 1, height: 0, minDepth: 0, maxDepth: 1, _success: false }, // Height of zero is not allowed\n  { x: 0, y: 0, width: 0, height: 0, minDepth: 0, maxDepth: 1, _success: false }, // Both width and height of zero are not allowed\n  { x: -1, y: 0, width: 1, height: 1, minDepth: 0, maxDepth: 1, _success: true }, // Negative x is allowed\n  { x: 0, y: -1, width: 1, height: 1, minDepth: 0, maxDepth: 1, _success: true }, // Negative y is allowed\n  { x: 0, y: 0, width: -1, height: 1, minDepth: 0, maxDepth: 1, _success: false }, // Negative width is not allowed\n  { x: 0, y: 0, width: 1, height: -1, minDepth: 0, maxDepth: 1, _success: false }, // Negative height is not allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: -1, maxDepth: 1, _success: false }, // Negative minDepth is not allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 0, maxDepth: -1, _success: false }, // Negative maxDepth is not allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 10, maxDepth: 1, _success: false }, // minDepth greater than 1 is not allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 0, maxDepth: 10, _success: false }, // maxDepth greater than 1 is not allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 0.5, maxDepth: 0.5, _success: true }, // minDepth equal to maxDepth is allowed\n  { x: 0, y: 0, width: 1, height: 1, minDepth: 0.8, maxDepth: 0.5, _success: true }, // minDepth greater than maxDepth is allowed\n  {\n    x: 0,\n    y: 0,\n    width: TEXTURE_WIDTH + 1,\n    height: TEXTURE_HEIGHT + 1,\n    minDepth: 0,\n    maxDepth: 1,\n    _success: true,\n  }, // Viewport larger than the framebuffer is allowed\n]);\n"],"file":"setViewport.spec.js"}