{"version":3,"sources":["../../../../src/suites/cts/validation/fences.spec.ts"],"names":["description","TestGroup","ValidationTest","g","test","t","fence","queue","createFence","expectValidationError","promise","onCompletion","shouldReject","signal","initialValue","anotherDevice","device","adapter","requestDevice","anotherQueue","defaultQueue","expect","getCompletedValue"],"mappings":"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","sourcesContent":["export const description = `\nfences validation tests.\n`;\n\nimport { TestGroup } from '../../../framework/index.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nexport const g = new TestGroup(ValidationTest);\n\n// TODO: Remove if https://github.com/gpuweb/gpuweb/issues/377 is decided\ng.test('wait on a fence without signaling the value is invalid', async t => {\n  const fence = t.queue.createFence();\n\n  t.expectValidationError(() => {\n    const promise = fence.onCompletion(2);\n    t.shouldReject('OperationError', promise);\n  });\n});\n\n// TODO: Remove if https://github.com/gpuweb/gpuweb/issues/377 is decided\ng.test('wait on a fence with a value greater than signaled value is invalid', async t => {\n  const fence = t.queue.createFence();\n  t.queue.signal(fence, 2);\n\n  t.expectValidationError(() => {\n    const promise = fence.onCompletion(3);\n    t.shouldReject('OperationError', promise);\n  });\n});\n\ng.test('signal a value lower than signaled value is invalid', async t => {\n  const fence = t.queue.createFence({ initialValue: 1 });\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 0);\n  });\n});\n\ng.test('signal a value equal to signaled value is invalid', async t => {\n  const fence = t.queue.createFence({ initialValue: 1 });\n\n  t.expectValidationError(() => {\n    t.queue.signal(fence, 1);\n  });\n});\n\ng.test('increasing fence value by more than 1 succeeds', async t => {\n  const fence = t.queue.createFence();\n\n  t.queue.signal(fence, 2);\n  await fence.onCompletion(2);\n\n  t.queue.signal(fence, 6);\n  await fence.onCompletion(6);\n});\n\ng.test('signal a fence on a different device than it was created on is invalid', async t => {\n  const fence = t.queue.createFence();\n\n  const anotherDevice = await t.device.adapter.requestDevice();\n  const anotherQueue = anotherDevice.defaultQueue;\n\n  t.expectValidationError(() => {\n    anotherQueue.signal(fence, 2);\n  });\n});\n\ng.test('signal a fence on a different device does not update fence signaled value', async t => {\n  const fence = t.queue.createFence({ initialValue: 1 });\n\n  const anotherDevice = await t.device.adapter.requestDevice();\n  const anotherQueue = anotherDevice.defaultQueue;\n\n  t.expectValidationError(() => {\n    anotherQueue.signal(fence, 2);\n  });\n\n  t.expect(fence.getCompletedValue() === 1);\n\n  t.queue.signal(fence, 2);\n  await fence.onCompletion(2);\n});\n"],"file":"fences.spec.js"}