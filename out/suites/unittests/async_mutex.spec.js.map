{"version":3,"sources":["../../../src/suites/unittests/async_mutex.spec.ts"],"names":["description","TestGroup","objectEquals","AsyncMutex","UnitTest","g","test","t","mutex","with","Promise","all","actual","expected","i","push","expect","ret"],"mappings":";;;;AAAA,OAAO,MAAMA,WAAW,GAAI;;CAArB;AAIP,SAASC,SAAT,EAAoBC,YAApB,QAAwC,0BAAxC;AACA,SAASC,UAAT,QAA2B,qCAA3B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,MAAMC,CAAC,GAAG,IAAIJ,SAAJ,CAAcG,QAAd,CAAV;AAEPC,CAAC,CAACC,IAAF,CAAO,OAAP,EAAgB,MAAMC,CAAN,IAAW;AACzB,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMK,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAAN;AACD,CAHD;AAKAJ,CAAC,CAACC,IAAF,CAAO,QAAP,EAAiB,MAAMC,CAAN,IAAW;AAC1B,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMK,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAAN;AACA,QAAMD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAAN;AACA,QAAMD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAAN;AACD,CALD;AAOAJ,CAAC,CAACC,IAAF,CAAO,UAAP,EAAmB,MAAMC,CAAN,IAAW;AAC5B,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMO,OAAO,CAACC,GAAR,CAAY,CAChBH,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CADgB,EAEhBD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAFgB,EAGhBD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAHgB,CAAZ,CAAN;AAKD,CAPD;AASAJ,CAAC,CAACC,IAAF,CAAO,eAAP,EAAwB,MAAMC,CAAN,IAAW;AACjC,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMS,MAAgB,GAAG,EAAzB;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAApB,EAA0B,EAAEA,CAA5B,EAA+B;AAC7BD,IAAAA,QAAQ,CAACE,IAAT,CAAcD,CAAd;AACAN,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAY;AACrBG,MAAAA,MAAM,CAACG,IAAP,CAAYD,CAAZ;AACD,KAFD;AAGD;;AACD,QAAMN,KAAK,CAACC,IAAN,CAAW,YAAY,CAAE,CAAzB,CAAN;AACAF,EAAAA,CAAC,CAACS,MAAF,CAASd,YAAY,CAACU,MAAD,EAASC,QAAT,CAArB;AACD,CAZD;AAcAR,CAAC,CAACC,IAAF,CAAO,QAAP,EAAiB,MAAMC,CAAN,IAAW;AAC1B,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMc,GAAG,GAAG,MAAMT,KAAK,CAACC,IAAN,CAAW,YAAY,GAAvB,CAAlB;AACAF,EAAAA,CAAC,CAACS,MAAF,CAASC,GAAG,KAAK,GAAjB;AACD,CAJD;AAMAZ,CAAC,CAACC,IAAF,CAAO,iBAAP,EAA0B,MAAMC,CAAN,IAAW;AACnC,QAAMC,KAAK,GAAG,IAAIL,UAAJ,EAAd;AACA,QAAMc,GAAG,GAAG,MAAMP,OAAO,CAACC,GAAR,CAAY,CAC5BH,KAAK,CAACC,IAAN,CAAW,YAAY,CAAvB,CAD4B,EAE5BD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAvB,CAF4B,EAG5BD,KAAK,CAACC,IAAN,CAAW,YAAY,CAAvB,CAH4B,CAAZ,CAAlB;AAKAF,EAAAA,CAAC,CAACS,MAAF,CAASd,YAAY,CAACe,GAAD,EAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,CAArB;AACD,CARD","sourcesContent":["export const description = `\nTests for AsyncMutex.\n`;\n\nimport { TestGroup, objectEquals } from '../../framework/index.js';\nimport { AsyncMutex } from '../../framework/util/async_mutex.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = new TestGroup(UnitTest);\n\ng.test('basic', async t => {\n  const mutex = new AsyncMutex();\n  await mutex.with(async () => {});\n});\n\ng.test('serial', async t => {\n  const mutex = new AsyncMutex();\n  await mutex.with(async () => {});\n  await mutex.with(async () => {});\n  await mutex.with(async () => {});\n});\n\ng.test('parallel', async t => {\n  const mutex = new AsyncMutex();\n  await Promise.all([\n    mutex.with(async () => {}),\n    mutex.with(async () => {}),\n    mutex.with(async () => {}),\n  ]);\n});\n\ng.test('parallel/many', async t => {\n  const mutex = new AsyncMutex();\n  const actual: number[] = [];\n  const expected = [];\n  for (let i = 0; i < 1000; ++i) {\n    expected.push(i);\n    mutex.with(async () => {\n      actual.push(i);\n    });\n  }\n  await mutex.with(async () => {});\n  t.expect(objectEquals(actual, expected));\n});\n\ng.test('return', async t => {\n  const mutex = new AsyncMutex();\n  const ret = await mutex.with(async () => 123);\n  t.expect(ret === 123);\n});\n\ng.test('return/parallel', async t => {\n  const mutex = new AsyncMutex();\n  const ret = await Promise.all([\n    mutex.with(async () => 1),\n    mutex.with(async () => 2),\n    mutex.with(async () => 3),\n  ]);\n  t.expect(objectEquals(ret, [1, 2, 3]));\n});\n"],"file":"async_mutex.spec.js"}